% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mecor.R
\name{mecor}
\alias{mecor}
\title{mecor: a measurement error correction package}
\usage{
mecor(formula, data, method = "rc", alpha = 0.05, B = 0)
}
\arguments{
\item{formula}{an object of class \link[stats]{formula} (or one that is
coerced to that class): a symbolic description of the model containing
a \link[mecor]{MeasError} object.}

\item{data}{a data.frame, list or environment (or
object coercible by as.data.frame to a data frame) containing
the variables in the model}

\item{method}{a character string indicating the method used to correct for
measurement error, either "rc" (regression calibration), "rc_pooled1" (efficient
regression calibration using delta variance for pooling) or "rc_pooled2" (efficient
regression calibration using bootstrap variance for pooling).}

\item{alpha}{alpha level used to construct confidence intervals}

\item{B}{number of bootstrap samples}
}
\value{
\code{mecor} returns an object of \link[base]{class} "mecor"

An object of class \code{mecor} is a list containing the following components:

\item{naivefit}{a lm.fit object of the uncorrected fit}
\item{corfit}{a lm.fit object of the corrected fit (if method = "rc") and a
matrix containing the corrected coefficients else}
\item{corvar}{the corrected variance using the delta method}
\item{ci.fieller}{fieller confidence interval (if method = "rc") else NA}
\item{ci.b}{bootstrap confidence interval (if B != 0)}
}
\description{
mecor provides correction methods for measurement
errors in a continuous covariate.
}
\examples{
##data generation
#measurement error in exposure
nobs <- 1e3
Z <- rnorm(nobs, 0, 1)
X <- Z + rnorm(nobs, 0, 1)
Y <- 0.5 * X + 2 * Z + rnorm(nobs, 0, 1)
W <- X + rnorm(nobs, 0, 0.5)
X <- ifelse(rbinom(nobs, 0, 0.9) == 1, NA, X)
data <- data.frame(Z, X, W, Y)
W2 <- X + rnorm(nobs, 0, 0.5)
W2 <- ifelse(rbinom(nobs, 0, 0.8) == 1, NA, W2)
data2 <- data.frame(Z, W, W2, Y)

mecor(Y ~ MeasError(W, X) + Z, data)
mecor(Y ~ MeasError(W, X) + Z, data, method = "rc_pooled1")
mecor(Y ~ MeasError(W, X) + Z, data, method = "rc_pooled2")
mecor(Y ~ MeasError(cbind(W, W2), NA) + Z, data2)
}
\references{
L.Nab, R.H.H. Groenwold, P.M.J. Welsing, M. van Smeden.
Measurement error in continuous endpoints in randomised trials: an exploration of problems and solutions
}
\author{
Linda Nab, \email{l.nab@lumc.nl}
}
